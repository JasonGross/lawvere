name: Ubuntu CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Adjusted from https://raw.githubusercontent.com/agda/agda-categories/master/.github/workflows/ci-ubuntu.yml
# LICENSE from Agda-Categories
######################################################
# MIT License
#
# Copyright (c) 2019 Agda Github Community
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#######################################################################

env:
  AGDA_COMMIT: tags/v2.6.3
  STDLIB_VERSION: 1.7.2

  GHC_VERSION: 8.6.5
  CABAL_VERSION: 3.2.0.0
  CABAL_INSTALL: cabal install --overwrite-policy=always --ghc-options='-O1 +RTS -M6G -RTS'
#  AGDA: agda --auto-inline -Werror +RTS -M6G -H3.5G -A128M -RTS -i. -i src/

jobs:
  test-categories:
    runs-on: ubuntu-latest
    steps:

########################################################################
## SETTINGS
########################################################################

      # The script won't be able to find Agda if we don't tell it to look at the
      # content of ~/.cabal/bin
      - name: Put cabal programs in PATH
        run: echo "~/.cabal/bin" >> $GITHUB_PATH

########################################################################
## CACHING
########################################################################

      # This caching step allows us to save a lot of building time by only
      # downloading ghc and cabal and rebuilding Agda if absolutely necessary
      # i.e. if we change either the version of Agda, ghc, or cabal that we want
      # to use for the build.
      - name: Cache cabal packages
        uses: actions/cache@v3
        id: cache-cabal
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
            ~/.cabal/bin
          key: ${{ runner.os }}-${{ env.GHC_VERSION }}-${{ env.CABAL_VERSION }}-${{ env.AGDA_COMMIT }}

########################################################################
## INSTALLATION STEPS
########################################################################

      - name: Install ghc and cabal
        if: steps.cache-cabal.outputs.cache-hit != 'true'
        uses: actions/setup-haskell@v1.1.3
        with:
          ghc-version: ${{ env.GHC_VERSION }}
          cabal-version: ${{ env.CABAL_VERSION }}

      - name: Cabal update
        if: steps.cache-cabal.outputs.cache-hit != 'true'
        run: cabal update

      - name: Download and install Agda from github
        if: steps.cache-cabal.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/agda/agda
          cd agda
          git checkout ${{ env.AGDA_COMMIT }}
          mkdir -p doc
          touch doc/user-manual.pdf
          ${{ env.CABAL_INSTALL }}
          cd ..

      - name: Install stdlib
        run: |
          mkdir -p $HOME/.agda
          cd $HOME/.agda
          wget https://github.com/agda/agda-stdlib/archive/v${{ env.STDLIB_VERSION }}.tar.gz
          tar -xzvf v${{ env.STDLIB_VERSION }}.tar.gz
          mv agda-stdlib-${{ env.STDLIB_VERSION }} agda-stdlib
          echo "~/.agda/agda-stdlib/standard-library.agda-lib" > libraries
          cd -

########################################################################
## TESTING AND DEPLOYMENT
########################################################################

      # By default github actions do not pull the repo
      - name: Checkout agda-categories
        uses: actions/checkout@v2

      - run: make
